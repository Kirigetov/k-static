$icon-prod-logo: (
  name: 'icon-prodLogo',
  x: 0px,
  y: 0px,
  offset-x: 0px,
  offset-y: 0px,
  width: 30px,
  height: 30px,
  total-width: 70px,
  total-height: 30px,
  image: '../img/sprite.png'
);
$icon-prod-logo2: (
  name: 'icon-prodLogo2',
  x: 40px,
  y: 0px,
  offset-x: -40px,
  offset-y: 0px,
  width: 30px,
  height: 29px,
  total-width: 70px,
  total-height: 30px,
  image: '../img/sprite.png'
);
$spritesheet: (
  width: 70px,
  height: 30px,
  image: '../img/sprite.png',
  sprites: ($icon-prod-logo, $icon-prod-logo2, )
);


@mixin sprite-width($sprite) {
  width: map-get($sprite, 'width');
}

@mixin sprite-height($sprite) {
  height: map-get($sprite, 'height');
}

@mixin sprite-position($sprite) {
  background-position: map-get($sprite, 'offset-x') map-get($sprite, 'offset-y');
}

@mixin sprite-image($sprite) {
  background-image: url(map-get($sprite, 'image'));
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

@mixin s($sprite) {
  @include sprite($sprite);
}

@mixin sprites {
  $sprites: map-get($spritesheet, 'sprites');
  @each $sprite in $sprites {
    $sprite-name: map-get($sprite, 'name');
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

// The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
//  It should be used with a "retina group" variable.

// $icon-home-group: (
//   name: 'icon-home',
//   normal: $icon-home,
//   retina: $icon-home-2x
// );

// .icon-home {
//   @include retina-sprite($icon-home-group);
// }

@mixin sprite-background-size($sprite) {
  background-size: map-get($sprite, 'total-width') map-get($sprite, 'total-height');
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: map-get($retina-group, 'normal');
  $retina-sprite: map-get($retina-group, 'retina');
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

@mixin retina-sprites {
  @each $retina-group in $retina-groups {
    $sprite-name: map-get($retina-group, 'name');
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
